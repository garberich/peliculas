{"ast":null,"code":"import _slicedToArray from \"/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/src/peliculas/FormularioPeliculas.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormGroupText from \"../utils/FormGroupText\";\nimport FormGroupCheckbox from \"../utils/FormGroupCheckbox\";\nimport FormGroupFecha from \"../utils/FormGroupFecha\";\nimport FormGroupImagen from \"../utils/FormGroupImagen\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport SelectorMultiple from \"../utils/SelectorMultiple\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormularioPeliculas(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(mapear(props.generosSeleccionados)),\n      _useState2 = _slicedToArray(_useState, 2),\n      generosSeleccionados = _useState2[0],\n      setgenerosSeleccionados = _useState2[1];\n\n  var _useState3 = useState(mapear(props.generosNoSeleccionados)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generosNoSeleccionados = _useState4[0],\n      setGenerosNoSeleccionados = _useState4[1];\n\n  function mapear(arreglo) {\n    return arreglo.map(function (valor) {\n      return {\n        llave: valor.id,\n        valor: valor.nombre\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      titulo: Yup.string().required(\"Este campo es requerido\").primeraLetraMayuscula()\n    }),\n    children: function children(formikProps) {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"T\\xEDtulo\",\n          campo: \"titulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupCheckbox, {\n          label: \"En cines\",\n          campo: \"enCines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Trailer\",\n          campo: \"trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupFecha, {\n          label: \"Fecha Lanzamiento\",\n          campo: \"fechaLanzamiento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupImagen, {\n          label: \"Poster\",\n          campo: \"poster\",\n          imagenURL: props.modelo.posterURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"G\\xE9neros:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n            seleccionados: generosSeleccionados,\n            noSeleccionados: generosNoSeleccionados,\n            onChange: function onChange(seleccionados, noSeleccionados) {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormularioPeliculas, \"cnj2sZNDnjNfO3T9MySuoL0ceJA=\");\n\n_c = FormularioPeliculas;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioPeliculas\");","map":{"version":3,"sources":["/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/src/peliculas/FormularioPeliculas.tsx"],"names":["Form","Formik","Yup","FormGroupText","FormGroupCheckbox","FormGroupFecha","FormGroupImagen","Button","Link","SelectorMultiple","useState","FormularioPeliculas","props","mapear","generosSeleccionados","setgenerosSeleccionados","generosNoSeleccionados","setGenerosNoSeleccionados","arreglo","map","valor","llave","id","nombre","modelo","onSubmit","object","titulo","string","required","primeraLetraMayuscula","formikProps","posterURL","seleccionados","noSeleccionados","isSubmitting"],"mappings":"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","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\nimport { peliculaCreacionDTO } from \"./peliculas.model\";\nimport * as Yup from \"yup\";\nimport FormGroupText from \"../utils/FormGroupText\";\nimport FormGroupCheckbox from \"../utils/FormGroupCheckbox\";\nimport FormGroupFecha from \"../utils/FormGroupFecha\";\nimport FormGroupImagen from \"../utils/FormGroupImagen\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport SelectorMultiple, { selectorMultipleModel } from \"../utils/SelectorMultiple\";\nimport { generoDTO } from \"../generos/generos.model\";\nimport { useState } from \"react\";\n\nexport default function FormularioPeliculas(props: formularioPeliculasProps) {\n    const [generosSeleccionados, setgenerosSeleccionados] = useState(mapear(props.generosSeleccionados));\n    const [generosNoSeleccionados, setGenerosNoSeleccionados] = useState(mapear(props.generosNoSeleccionados));\n\n    function mapear(arreglo: {id:number, nombre: string}[]): selectorMultipleModel[]{\n        return arreglo.map(valor => ({ llave: valor.id, valor: valor.nombre }))\n    }\n\n    \n  return (\n    <Formik\n      initialValues={props.modelo}\n      onSubmit={props.onSubmit}\n      validationSchema={Yup.object({\n        titulo: Yup.string()\n          .required(\"Este campo es requerido\")\n          .primeraLetraMayuscula(),\n      })}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormGroupText label=\"Título\" campo=\"titulo\" />\n          <FormGroupCheckbox label=\"En cines\" campo=\"enCines\" />\n          <FormGroupText label=\"Trailer\" campo=\"trailer\" />\n          <FormGroupFecha label=\"Fecha Lanzamiento\" campo=\"fechaLanzamiento\" />\n          <FormGroupImagen\n            label=\"Poster\"\n            campo=\"poster\"\n            imagenURL={props.modelo.posterURL}\n          />\n\n          <div className=\"form-group\">\n              <label>Géneros:</label>\n              <SelectorMultiple \n              seleccionados={generosSeleccionados}\n              noSeleccionados={generosNoSeleccionados}\n              onChange={(seleccionados, noSeleccionados) => {\n\n              }}\n              />\n          </div>\n\n          <Button disabled={formikProps.isSubmitting} type=\"submit\">\n            Enviar\n          </Button>\n          <Link className=\"btn btn-secondary\" to=\"/\">\n            Cancelar\n          </Link>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\ninterface formularioPeliculasProps {\n  modelo: peliculaCreacionDTO;\n  onSubmit(\n    valores: peliculaCreacionDTO,\n    acciones: FormikHelpers<peliculaCreacionDTO>\n  ): void;\n  generosSeleccionados:generoDTO[];\n  generosNoSeleccionados:generoDTO[];\n}\n"]},"metadata":{},"sourceType":"module"}