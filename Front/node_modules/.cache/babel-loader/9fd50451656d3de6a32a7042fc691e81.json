{"ast":null,"code":"import _toConsumableArray from \"/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/src/peliculas/FormularioPeliculas.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormGroupText from \"../utils/FormGroupText\";\nimport FormGroupCheckbox from \"../utils/FormGroupCheckbox\";\nimport FormGroupFecha from \"../utils/FormGroupFecha\";\nimport FormGroupImagen from \"../utils/FormGroupImagen\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport SelectorMultiple from \"../utils/SelectorMultiple\";\nimport { useState } from \"react\";\nimport TypeAheadActores from \"../actores/TypeAheadActores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormularioPeliculas(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(mapear(props.generosSeleccionados)),\n      _useState2 = _slicedToArray(_useState, 2),\n      generosSeleccionados = _useState2[0],\n      setGenerosSeleccionados = _useState2[1];\n\n  var _useState3 = useState(mapear(props.generosNoSeleccionados)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generosNoSeleccionados = _useState4[0],\n      setGenerosNoSeleccionados = _useState4[1];\n\n  var _useState5 = useState(mapear(props.cinesSeleccionados)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cinesSeleccionados = _useState6[0],\n      setCinesSeleccionados = _useState6[1];\n\n  var _useState7 = useState(mapear(props.cinesNoSeleccionados)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cinesNoSeleccionados = _useState8[0],\n      setCinesNoSeleccionados = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      actoresSeleccionados = _useState10[0],\n      setActoresSeleccionados = _useState10[1];\n\n  function mapear(arreglo) {\n    return arreglo.map(function (valor) {\n      return {\n        llave: valor.id,\n        valor: valor.nombre\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: function onSubmit(valores, acciones) {\n      valores.generosIds = generosSeleccionados.map(function (valor) {\n        return valor.llave;\n      });\n      valores.cinesIds = cinesSeleccionados.map(function (valor) {\n        return valor.llave;\n      });\n      props.onSubmit(valores, acciones);\n    },\n    validationSchema: Yup.object({\n      titulo: Yup.string().required(\"Este campo es requerido\").primeraLetraMayuscula()\n    }),\n    children: function children(formikProps) {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"T\\xEDtulo\",\n          campo: \"titulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupCheckbox, {\n          label: \"En cines\",\n          campo: \"enCines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n          label: \"Trailer\",\n          campo: \"trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupFecha, {\n          label: \"Fecha Lanzamiento\",\n          campo: \"fechaLanzamiento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormGroupImagen, {\n          label: \"Poster\",\n          campo: \"poster\",\n          imagenURL: props.modelo.posterURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"G\\xE9neros:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n            seleccionados: generosSeleccionados,\n            noSeleccionados: generosNoSeleccionados,\n            onChange: function onChange(seleccionados, noSeleccionados) {\n              setGenerosSeleccionados(seleccionados);\n              setGenerosNoSeleccionados(noSeleccionados);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n            seleccionados: cinesSeleccionados,\n            noSeleccionados: cinesNoSeleccionados,\n            onChange: function onChange(seleccionados, noSeleccionados) {\n              setCinesSeleccionados(seleccionados);\n              setCinesNoSeleccionados(noSeleccionados);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(TypeAheadActores, {\n            onAdd: function onAdd(actores) {\n              setActoresSeleccionados(actores);\n            },\n            onRemove: function onRemove(actor) {\n              var actores = actoresSeleccionados.filter(function (x) {\n                return x !== actor;\n              });\n              setActoresSeleccionados(actores);\n            },\n            actores: actoresSeleccionados,\n            listadoUI: function listadoUI(actor) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [actor.nombre, \" /\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Personaje\",\n                  type: \"text\",\n                  value: actor.personaje,\n                  onChange: function onChange(e) {\n                    var indice = actoresSeleccionados.findIndex(function (x) {\n                      return x.id === actor.id;\n                    });\n\n                    var actores = _toConsumableArray(actoresSeleccionados);\n\n                    actores[indice].personaje = e.currentTarget.value;\n                    setActoresSeleccionados(actores);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormularioPeliculas, \"9dIQek/A3fkJY/BBRDeWLAcfNC4=\");\n\n_c = FormularioPeliculas;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioPeliculas\");","map":{"version":3,"sources":["/home/richard/Documentos/Projectos/Personal/peliculas/react-peliculas/src/peliculas/FormularioPeliculas.tsx"],"names":["Form","Formik","Yup","FormGroupText","FormGroupCheckbox","FormGroupFecha","FormGroupImagen","Button","Link","SelectorMultiple","useState","TypeAheadActores","FormularioPeliculas","props","mapear","generosSeleccionados","setGenerosSeleccionados","generosNoSeleccionados","setGenerosNoSeleccionados","cinesSeleccionados","setCinesSeleccionados","cinesNoSeleccionados","setCinesNoSeleccionados","actoresSeleccionados","setActoresSeleccionados","arreglo","map","valor","llave","id","nombre","modelo","valores","acciones","generosIds","cinesIds","onSubmit","object","titulo","string","required","primeraLetraMayuscula","formikProps","posterURL","seleccionados","noSeleccionados","actores","actor","filter","x","personaje","e","indice","findIndex","currentTarget","value","isSubmitting"],"mappings":"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","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\nimport { peliculaCreacionDTO } from \"./peliculas.model\";\nimport * as Yup from \"yup\";\nimport FormGroupText from \"../utils/FormGroupText\";\nimport FormGroupCheckbox from \"../utils/FormGroupCheckbox\";\nimport FormGroupFecha from \"../utils/FormGroupFecha\";\nimport FormGroupImagen from \"../utils/FormGroupImagen\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport SelectorMultiple, {\n  selectorMultipleModel,\n} from \"../utils/SelectorMultiple\";\nimport { generoDTO } from \"../generos/generos.model\";\nimport { useState } from \"react\";\nimport { cineDTO } from \"../cines/cines.model\";\nimport TypeAheadActores from \"../actores/TypeAheadActores\";\nimport { actorPeliculasDTO } from \"../actores/actores.model\";\n\nexport default function FormularioPeliculas(props: formularioPeliculasProps) {\n  const [generosSeleccionados, setGenerosSeleccionados] = useState(\n    mapear(props.generosSeleccionados)\n  );\n  const [generosNoSeleccionados, setGenerosNoSeleccionados] = useState(\n    mapear(props.generosNoSeleccionados)\n  );\n\n  const [cinesSeleccionados, setCinesSeleccionados] = useState(\n    mapear(props.cinesSeleccionados)\n  );\n  const [cinesNoSeleccionados, setCinesNoSeleccionados] = useState(\n    mapear(props.cinesNoSeleccionados)\n  );\n\n  const [actoresSeleccionados, setActoresSeleccionados] = useState<\n    actorPeliculasDTO[]\n  >([]);\n\n  function mapear(\n    arreglo: { id: number; nombre: string }[]\n  ): selectorMultipleModel[] {\n    return arreglo.map((valor) => ({ llave: valor.id, valor: valor.nombre }));\n  }\n\n  return (\n    <Formik\n      initialValues={props.modelo}\n      onSubmit={(valores, acciones) => {\n        valores.generosIds = generosSeleccionados.map((valor) => valor.llave);\n        valores.cinesIds = cinesSeleccionados.map((valor) => valor.llave);\n        props.onSubmit(valores, acciones);\n      }}\n      validationSchema={Yup.object({\n        titulo: Yup.string()\n          .required(\"Este campo es requerido\")\n          .primeraLetraMayuscula(),\n      })}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormGroupText label=\"Título\" campo=\"titulo\" />\n          <FormGroupCheckbox label=\"En cines\" campo=\"enCines\" />\n          <FormGroupText label=\"Trailer\" campo=\"trailer\" />\n          <FormGroupFecha label=\"Fecha Lanzamiento\" campo=\"fechaLanzamiento\" />\n          <FormGroupImagen\n            label=\"Poster\"\n            campo=\"poster\"\n            imagenURL={props.modelo.posterURL}\n          />\n\n          <div className=\"form-group\">\n            <label>Géneros:</label>\n            <SelectorMultiple\n              seleccionados={generosSeleccionados}\n              noSeleccionados={generosNoSeleccionados}\n              onChange={(seleccionados, noSeleccionados) => {\n                setGenerosSeleccionados(seleccionados);\n                setGenerosNoSeleccionados(noSeleccionados);\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Cines:</label>\n            <SelectorMultiple\n              seleccionados={cinesSeleccionados}\n              noSeleccionados={cinesNoSeleccionados}\n              onChange={(seleccionados, noSeleccionados) => {\n                setCinesSeleccionados(seleccionados);\n                setCinesNoSeleccionados(noSeleccionados);\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <TypeAheadActores\n              onAdd={(actores) => {\n                setActoresSeleccionados(actores);\n              }}\n              onRemove={actor => {\n                const actores = actoresSeleccionados.filter(x => x !== actor);\n                setActoresSeleccionados(actores);\n              }}\n              actores={actoresSeleccionados}\n              listadoUI={(actor: actorPeliculasDTO) => (\n                <>\n                  {actor.nombre} /{\" \"}\n                  <input\n                    placeholder=\"Personaje\"\n                    type=\"text\"\n                    value={actor.personaje}\n                    onChange={(e) => {\n                      const indice = actoresSeleccionados.findIndex(\n                        (x) => x.id === actor.id\n                      );\n                      const actores = [...actoresSeleccionados];\n                      actores[indice].personaje = e.currentTarget.value;\n                      setActoresSeleccionados(actores);\n                    }}\n                  />\n                </>\n              )}\n            />\n          </div>\n\n          <Button disabled={formikProps.isSubmitting} type=\"submit\">\n            Enviar\n          </Button>\n          <Link className=\"btn btn-secondary\" to=\"/\">\n            Cancelar\n          </Link>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\ninterface formularioPeliculasProps {\n  modelo: peliculaCreacionDTO;\n  onSubmit(\n    valores: peliculaCreacionDTO,\n    acciones: FormikHelpers<peliculaCreacionDTO>\n  ): void;\n  generosSeleccionados: generoDTO[];\n  generosNoSeleccionados: generoDTO[];\n  cinesSeleccionados: cineDTO[];\n  cinesNoSeleccionados: cineDTO[];\n}\n"]},"metadata":{},"sourceType":"module"}